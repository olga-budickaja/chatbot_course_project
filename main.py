import telebot
from telebot.types import Message, ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton
import os
from dotenv import load_dotenv
import json
import random

load_dotenv()

token = os.getenv("TOKEN_TELEBOT")
admin = int(os.getenv("ADMIN"))
bot = telebot.TeleBot(token)

users = {}

try:
    with open('data.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
except FileNotFoundError:
    data = {"films": [], "musics": [], "joks": []}


def save_data():
    with open('data.json', 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

MENU_KEYBOARD = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
btn_films = KeyboardButton('–§—ñ–ª—å–º–∏ üé•')
btn_musics = KeyboardButton('–ú—É–∑–∏–∫–∞ üéµ')
btn_histories = KeyboardButton('–ü—Ä–∏–∫–æ–ª–∏ üòÇ')
btn_plays = KeyboardButton('–Ü–≥—Ä–∏ üéÆ')

MENU_KEYBOARD.add(btn_films, btn_musics, btn_histories, btn_plays)

ADMIN_KEYBOARD_FILM = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
btn_add_film = KeyboardButton('–î–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å–º')
btn_delete_film = KeyboardButton('–í–∏–¥–∞–ª–∏—Ç–∏ —Ñ—ñ–ª—å–º')
btn_view_film = KeyboardButton('–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ñ—ñ–ª—å–º')

ADMIN_KEYBOARD_FILM.add(btn_add_film, btn_delete_film, btn_view_film)

ADMIN_KEYBOARD_MUSIC = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
btn_add_music = KeyboardButton('–î–æ–¥–∞—Ç–∏ –º—É–∑–∏–∫—É')
btn_delete_music = KeyboardButton('–í–∏–¥–∞–ª–∏—Ç–∏ –º—É–∑–∏–∫—É')
btn_view_music = KeyboardButton('–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º—É–∑–∏–∫—É')

ADMIN_KEYBOARD_MUSIC.add(btn_add_music, btn_delete_music, btn_view_music)

ADMIN_KEYBOARD_JOKE = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
btn_add_joke = KeyboardButton('–î–æ–¥–∞—Ç–∏ –ø—Ä–∏–∫–æ–ª')
btn_delete_joke = KeyboardButton('–í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–∏–∫–æ–ª')
btn_view_joke = KeyboardButton('–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–∏–∫–æ–ª–∏')

ADMIN_KEYBOARD_JOKE.add(btn_add_joke, btn_delete_joke, btn_view_joke)

ADMIN_KEYBOARD_PLAY = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
btn_play_1 = KeyboardButton('–ö–∞–º—ñ–Ω—å-–Ω–æ–∂–∏—Ü—ñ-–ø–∞–ø—ñ—Ä ü™®‚úÇÔ∏èüßª')
btn_play_2 = KeyboardButton('–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ ü§ì')

ADMIN_KEYBOARD_PLAY.add(btn_play_1, btn_play_2)


@bot.message_handler(commands=['start'])
def start(message:Message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name

    if message.chat.id == admin:
        sent_message = bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é –≤ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ", reply_markup=MENU_KEYBOARD)
        bot.register_next_step_handler(sent_message, admin_panel)
    else:
        if user_id not in users:
            users[user_id] = True
            bot.send_message(message.chat.id, f"üé¨ –í—ñ—Ç–∞—é, {user_name}! –Ø —Ä–æ–∑–≤–∞–∂–∞–ª—å–Ω–∏–π –±–æ—Ç ü§ñ. "
                                "–†–æ–∑–ø–æ–≤—ñ–º —Ç–æ–±—ñ –ø—Ä–æ —Ü—ñ–∫–∞–≤—ñ —Ñ—ñ–ª—å–º–∏ üé•, –Ω–∞–π—É–ª—é–±–ª–µ–Ω—ñ—à—ñ —Ö—ñ—Ç–∏ üéµ, "
                                "–Ω–∞–π—Å–º—ñ—à–Ω—ñ—à—ñ –ø—Ä–∏–∫–æ–ª–∏ üòÇ —Ç–∞ –Ω–∞–≤—ñ—Ç—å –∑–∞–ø—Ä–æ–ø–æ–Ω—É—é –ø–æ–≥—Ä–∞—Ç–∏ üéÆ!",
                        reply_markup=MENU_KEYBOARD)
        sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: ", reply_markup=MENU_KEYBOARD)
        bot.register_next_step_handler(sent_message, user_panel)



# ADMIN PANEL
def admin_panel(message:Message):
    sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: ", reply_markup=ReplyKeyboardRemove())
    if message.text == '–§—ñ–ª—å–º–∏ üé•':
        choose_category_admin(message, ADMIN_KEYBOARD_FILM, admin_panel_film)
    elif message.text == '–ú—É–∑–∏–∫–∞ üéµ':
        choose_category_admin(message, ADMIN_KEYBOARD_MUSIC, admin_panel_music)
    elif message.text == '–ü—Ä–∏–∫–æ–ª–∏ üòÇ':
        choose_category_admin(message, ADMIN_KEYBOARD_JOKE, admin_panel_joke)
    elif message.text == '–Ü–≥—Ä–∏ üéÆ':
        choose_category_admin(message, ADMIN_KEYBOARD_PLAY, play_panel)


def choose_category_admin(message:Message, markup, fnk):
    """
    This function returns choose category from admin-menu,
    where message - message:Message,
    markup - name of ReplyKeyboardMarkup,
    fnc - next step`s function
    """
    sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ", reply_markup=markup)
    bot.register_next_step_handler(sent_message, fnk)


# FILMS
def admin_panel_film(message:Message):
    if message.text == '–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —Ñ—ñ–ª—å–º':
        sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º–∞: ", reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(sent_message, get_new_film_title)
    elif message.text == '–í–∏–¥–∞–ª–∏—Ç–∏ —Ñ—ñ–ª—å–º':
        if len(data["films"]):
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for idx, film in  enumerate(data["films"]):
                keyboard.add(KeyboardButton(f'{idx + 1}. {film["title"]}'))

            sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—å–º –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ", reply_markup=keyboard)
            bot.register_next_step_handler(sent_message, remove_film)
        else:
            sent_message = bot.send_message(message.chat.id, "–í –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —â–µ –Ω–µ–º–∞—î —Ñ—ñ–ª—å–º—ñ–≤. –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à–∏–π: ", reply_markup=ReplyKeyboardRemove())
            sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º–∞: ")
            bot.register_next_step_handler(sent_message, get_new_film_title)
    elif message.text == '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ñ—ñ–ª—å–º':
        if len(data["films"]):
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for idx, film in  enumerate(data["films"]):
                keyboard.add(KeyboardButton(f'{idx + 1}. {film["title"]}'))

            sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—å–º –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É: ", reply_markup=keyboard)
            bot.register_next_step_handler(sent_message, get_info_film)
        else:
            sent_message = bot.send_message(message.chat.id, "–í –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —â–µ –Ω–µ–º–∞—î —Ñ—ñ–ª—å–º—ñ–≤. –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à–∏–π: ", reply_markup=ReplyKeyboardRemove())
            sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º–∞: ")
            bot.register_next_step_handler(sent_message, get_new_film_title)


# create film
def get_new_film_title(message:Message):
    title = message.text
    new_film = {
        'title': title,
        'link': '',
        'desc': []
    }
    data['films'].append(new_film)
    save_data()
    sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ—ñ–ª—å–º: ")

    bot.register_next_step_handler(sent_message, get_new_film_link)



def get_new_film_link(message:Message):
    data['films'][-1]['link'] = message.text
    save_data()
    sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å: ")
    bot.register_next_step_handler(sent_message, get_new_film_desc)



def get_new_film_desc(message: Message):
    if message.text in ["/end", "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏"]:
        sent_message = bot.send_message(message.chat.id, "–§—ñ–ª—å–º —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")
        start(message)
    else:
        data['films'][-1]['desc'].append(message.text)
        save_data()
        handle_end_creation(message, '–§—ñ–ª—å–º —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.', '–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å', get_new_film_desc)


# get film
def get_info_film(message: Message):
    id_film = int(message.text.split(".")[0]) - 1
    film = data["films"][id_film]

    bot.send_message(message.chat.id, film['title'], reply_markup=ReplyKeyboardRemove())

    for i in film['desc']:
        bot.send_message(message.chat.id, i)

    bot.send_message(message.chat.id, film['link'])
    start(message)


# remove film
def remove_film(message: Message):
    id_film = int(message.text.split(".")[0]) - 1
    del  data["films"][id_film]

    bot.send_message(message.chat.id, "–§—ñ–ª—å–º —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.")
    start(message)


# MUSICS
def admin_panel_music(message:Message):
    if message.text == '–î–æ–¥–∞—Ç–∏ –º—É–∑–∏–∫—É':
        sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç—Ä–µ–∫—É: ", reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(sent_message, get_new_music_title)
    elif message.text == '–í–∏–¥–∞–ª–∏—Ç–∏ –º—É–∑–∏–∫—É':
        if len(data["musics"]):
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for idx, music in  enumerate(data["musics"]):
                keyboard.add(KeyboardButton(f'{idx + 1}. {music["title"]}'))

            sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –º—É–∑–∏–∫—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ", reply_markup=keyboard)
            bot.register_next_step_handler(sent_message, remove_music)
        else:
            sent_message = bot.send_message(message.chat.id, "–í –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —â–µ –Ω–µ–º–∞—î –º—É–∑–∏–∫–∏. –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à—É: ", reply_markup=ReplyKeyboardRemove())
            sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –º—É–∑–∏–∫–∏: ")
            bot.register_next_step_handler(sent_message, get_new_music_title)
    elif message.text == '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º—É–∑–∏–∫—É':
        if len(data["musics"]):
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for idx, music in  enumerate(data["musics"]):
                keyboard.add(KeyboardButton(f'{idx + 1}. {music["title"]}'))

            sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –º—É–∑–∏–∫—É –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É: ", reply_markup=keyboard)
            bot.register_next_step_handler(sent_message, get_info_music)
        else:
            sent_message = bot.send_message(message.chat.id, "–í –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —â–µ –Ω–µ–º–∞—î –º—É–∑–∏–∫–∏. –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à—É: ", reply_markup=ReplyKeyboardRemove())
            sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –º—É–∑–∏–∫–∏: ")
            bot.register_next_step_handler(sent_message, get_new_music_title)


# create music
def get_new_music_title(message:Message):
    title = message.text
    new_music = {
        'title': title,
        'link': '',
    }
    data['musics'].append(new_music)
    save_data()
    sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –º—É–∑–∏–∫—É: ")

    bot.register_next_step_handler(sent_message, get_new_music_link)


def get_new_music_link(message:Message):
    data['musics'][-1]['link'] = message.text
    save_data()
    bot.send_message(message.chat.id, "–ú—É–∑–∏–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")
    start(message)


# get music
def get_info_music(message: Message):
    id_music = int(message.text.split(".")[0]) - 1
    music = data["musics"][id_music]

    bot.send_message(message.chat.id, music['title'], reply_markup=ReplyKeyboardRemove())

    bot.send_message(message.chat.id, music['link'])
    start(message)


# remove music
def remove_music(message: Message):
    id_film = int(message.text.split(".")[0]) - 1
    del  data["musics"][id_film]

    bot.send_message(message.chat.id, "–ú—É–∑–∏–∫—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.")
    start(message)


# JOKS
def admin_panel_joke(message:Message):
    if message.text == '–î–æ–¥–∞—Ç–∏ –ø—Ä–∏–∫–æ–ª':
        sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –≤–º—ñ—Å—Ç –ø—Ä–∏–∫–æ–ª—É: ", reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(sent_message, get_new_joke_title)
    elif message.text == '–í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–∏–∫–æ–ª':
        if len(data["joks"]):
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for idx, joke in  enumerate(data["joks"]):
                title = f"{idx + 1}. {joke["title"]}"
                image_url = joke["link"]

                keyboard.add(KeyboardButton(f'{idx + 1}. {joke["title"]}'))

                bot.send_photo(message.chat.id, image_url, caption=title)

            sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –ø—Ä–∏–∫–æ–ª –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ", reply_markup=keyboard)
            bot.register_next_step_handler(sent_message, remove_joke)
        else:
            sent_message = bot.send_message(message.chat.id, "–í –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —â–µ –Ω–µ–º–∞—î –ø—Ä–∏–∫–æ–ª—ñ–≤. –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à–∏–π: ", reply_markup=ReplyKeyboardRemove())
            sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ—Ç–∞—Ç–∫—É –¥–ª—è –ø—Ä–∏–∫–æ–ª—É: ")
            bot.register_next_step_handler(sent_message, get_new_joke_title)
    elif message.text == '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–∏–∫–æ–ª–∏':
        if len(data["joks"]):
            for idx, joke in enumerate(data["joks"]):
                title = joke["title"]
                media_url = joke["link"]

                bot.send_video(message.chat.id, media_url, caption=title)

            start(message)
        else:
            sent_message = bot.send_message(message.chat.id, "–í –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —â–µ –Ω–µ–º–∞—î –ø—Ä–∏–∫–æ–ª—ñ–≤. –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à–∏–π: ", reply_markup=ReplyKeyboardRemove())
            sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –≤–º—ñ—Å—Ç –ø—Ä–∏–∫–æ–ª—É: ")
            bot.register_next_step_handler(sent_message, get_new_joke_title)


# create joke
def get_new_joke_title(message:Message):
    title = message.text
    new_joke = {
        'title': title,
        'link': '',
    }
    data['joks'].append(new_joke)
    save_data()
    sent_message = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–∏–∫–æ–ª: ")

    bot.register_next_step_handler(sent_message, get_new_joke_link)


def get_new_joke_link(message:Message):
    data['joks'][-1]['link'] = message.text
    save_data()
    sent_message = bot.send_message(message.chat.id, "–ü—Ä–∏–∫–æ–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")
    start(message)


# remove joke
def remove_joke(message: Message):
    id_film = int(message.text.split(".")[0]) - 1
    del  data["joks"][id_film]

    bot.send_message(message.chat.id, "–ü—Ä–∏–∫–æ–ª —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.")
    start(message)


# USER PANEL
def user_panel(message:Message):
    if message.text == '–§—ñ–ª—å–º–∏ üé•':
        if len(data["films"]):
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for idx, film in  enumerate(data["films"]):
                keyboard.add(KeyboardButton(f'{idx + 1}. {film["title"]}'))

            sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—å–º –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É: ", reply_markup=keyboard)
            bot.register_next_step_handler(sent_message, get_info_film)
        else:
            bot.send_message(message.chat.id, "–§—ñ–ª—å–º—ñ–≤, –Ω–∞–∂–∞–ª—å, –Ω–µ–º–∞—î. ü§∑üèΩ‚Äç‚ôÄÔ∏è")
            start(message)
    elif message.text == '–ú—É–∑–∏–∫–∞ üéµ':
        if len(data["musics"]):
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            for idx, music in  enumerate(data["musics"]):
                keyboard.add(KeyboardButton(f'{idx + 1}. {music["title"]}'))

            sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –º—É–∑–∏–∫—É –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É: ", reply_markup=keyboard)
            bot.register_next_step_handler(sent_message, get_info_music)
        else:
            bot.send_message(message.chat.id, "–ú—É–∑–∏–∫–∏, –Ω–∞–∂–∞–ª—å, –Ω–µ–º–∞—î. ü§∑üèΩ‚Äç‚ôÄÔ∏è")
            start(message)
    elif message.text == '–ü—Ä–∏–∫–æ–ª–∏ üòÇ':
        if len(data["joks"]):
            for idx, joke in enumerate(data["joks"]):
                title = joke["title"]
                media_url = joke["link"]

                bot.send_video(message.chat.id, media_url, caption=title)

            start(message)
    elif message.text == '–Ü–≥—Ä–∏ üéÆ':
        choose_category_admin(message, ADMIN_KEYBOARD_PLAY, play_panel)


# PLAYS
def play_panel(message:Message):
    if message.text == '–ö–∞–º—ñ–Ω—å-–Ω–æ–∂–∏—Ü—ñ-–ø–∞–ø—ñ—Ä ü™®‚úÇÔ∏èüßª':
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        keyboard.add("–ö–∞–º—ñ–Ω—å ü™®", "–ù–æ–∂–∏—Ü—ñ ‚úÇÔ∏è", "–ü–∞–ø—ñ—Ä üßª", "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏")
        sent_message = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —Ö—ñ–¥: ", reply_markup=keyboard)
        bot.register_next_step_handler(sent_message, get_play_step)
    elif message.text == '–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ ü§ì':
        random_number = random.randint(0, 100)

        keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        keyboard.add("–î—ñ–∑–Ω–∞—Ç–∏—Å—å —á–∏—Å–ª–æ üòà", "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏")

        sent_message = bot.send_message(
            message.chat.id, "–í–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 100 –≤–∫–ª—é—á–Ω–æ: ", reply_markup=keyboard
        )

        bot.register_next_step_handler(sent_message, lambda msg: check_guess(msg, random_number))

def check_guess(message: Message, random_number):
    answer = message.text.strip()
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("–î—ñ–∑–Ω–∞—Ç–∏—Å—å —á–∏—Å–ª–æ üòà", "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏")

    if answer == "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏":
        bot.send_message(message.chat.id, "–ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        start(message)
        return

    if answer == "–î—ñ–∑–Ω–∞—Ç–∏—Å—å —á–∏—Å–ª–æ üòà":
        bot.send_message(message.chat.id, f"–ó–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ: {random_number} ü§ì")
        bot.send_message(message.chat.id, "–ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        start(message)
        return

    if not answer.isdigit():
        bot.send_message(message.chat.id, "–£–ø—Å, üôÑ –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 100!", reply_markup=keyboard)
        bot.register_next_step_handler(message, lambda msg: check_guess(msg, random_number))
        return

    answer = int(answer)

    if not (0 <= answer <= 100):
        bot.send_message(message.chat.id, "–£–ø—Å, üôÑ –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 100!", reply_markup=keyboard)
        bot.register_next_step_handler(message, lambda msg: check_guess(msg, random_number))
        return

    if answer == random_number:
        bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é! –í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏. üèÜ")
        start(message)
    elif answer > random_number:
        bot.send_message(message.chat.id, "–ù–µ –≤–≥–∞–¥–∞–ª–∏. ü§ì –ü—ñ–¥–∫–∞–∑–∫–∞: –ó–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ –º–µ–Ω—à–µ", reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, "–ù–µ –≤–≥–∞–¥–∞–ª–∏. ü§ì –ü—ñ–¥–∫–∞–∑–∫–∞: –ó–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ", reply_markup=keyboard)

    bot.register_next_step_handler(message, lambda msg: check_guess(msg, random_number))



def get_play_step(message: Message):
    user_answer = message.text
    bot_answers = ["–ö–∞–º—ñ–Ω—å ü™®", "–ù–æ–∂–∏—Ü—ñ ‚úÇÔ∏è", "–ü–∞–ø—ñ—Ä üßª"]
    keyboard = ["–ö–∞–º—ñ–Ω—å ü™®", "–ù–æ–∂–∏—Ü—ñ ‚úÇÔ∏è", "–ü–∞–ø—ñ—Ä üßª", "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏"]

    # –í–∏–ø–∞–¥–∫–æ–≤–∏–π –≤–∏–±—ñ—Ä –±–æ—Ç–∞ –±–µ–∑ –∑–∞–π–≤–æ–≥–æ —Ç–µ–∫—Å—Ç—É
    bot_choice = random.choice(bot_answers)

    bot.send_message(message.chat.id, f"–ú–æ—è –í—ñ–¥–ø–æ–≤—ñ–¥—å: {bot_choice}")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥—Ä–∏
    if user_answer == bot_choice:
        bot.send_message(message.chat.id, "–ù—ñ—á–∏—è ü§ù")
        handle_and_creation_plays(message, "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —Ö—ñ–¥: ", keyboard)

    elif user_answer == "–ö–∞–º—ñ–Ω—å ü™®":
        match bot_choice:
            case "–ù–æ–∂–∏—Ü—ñ ‚úÇÔ∏è":
                bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é! –í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏. üèÜ")
            case "–ü–∞–ø—ñ—Ä üßª":
                bot.send_message(message.chat.id, "–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏. ü•∫ –°–ø—Ä–æ–±—É—î–º–æ —â–µ?")

        handle_and_creation_plays(message, "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —Ö—ñ–¥: ", keyboard)

    elif user_answer == "–ù–æ–∂–∏—Ü—ñ ‚úÇÔ∏è":
        match bot_choice:
            case "–ü–∞–ø—ñ—Ä üßª":
                bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é! –í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏. üèÜ")
            case "–ö–∞–º—ñ–Ω—å ü™®":
                bot.send_message(message.chat.id, "–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏. ü•∫ –°–ø—Ä–æ–±—É—î–º–æ —â–µ?")

        handle_and_creation_plays(message, "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —Ö—ñ–¥: ", keyboard)

    elif user_answer == "–ü–∞–ø—ñ—Ä üßª":
        match bot_choice:
            case "–ö–∞–º—ñ–Ω—å ü™®":
                bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é! –í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏. üèÜ")
            case "–ù–æ–∂–∏—Ü—ñ ‚úÇÔ∏è":
                bot.send_message(message.chat.id, "–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏. ü•∫ –°–ø—Ä–æ–±—É—î–º–æ —â–µ?")

        handle_and_creation_plays(message, "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —Ö—ñ–¥: ", keyboard)

    else:
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –ö–∞–º—ñ–Ω—å ü™®, –ù–æ–∂–∏—Ü—ñ ‚úÇÔ∏è –∞–±–æ –ü–∞–ø—ñ—Ä üßª.")
        handle_and_creation_plays(message, "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —Ö—ñ–¥: ", keyboard)


# GENERALY FUNCTIONS
def handle_end_creation(message: Message, text_message, action, func):
    """
    This function ended actions,
    where name - a category name,
    action - an action text,
    func - next step`s function
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn_end_film = KeyboardButton('–ó–∞–∫—ñ–Ω—á–∏—Ç–∏')
    keyboard.add(btn_end_film)

    if message.text == "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏" or message.text == "/end":
        sent_message = bot.send_message(message.chat.id, f"{text_message} —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!",  reply_markup=ReplyKeyboardRemove())
        start(message)
    else:
        sent_message = bot.send_message(message.chat.id, f"{action} a–±o - /end, —â–æ–± –∑–∞–∫—ñ–Ω—á–∏—Ç–∏: ", reply_markup=keyboard)
        bot.register_next_step_handler(sent_message, func)


def handle_and_creation_plays(message:Message, text_message, keyboardPlay):
    """
    This function ended plays,
    where text_message - text message for play start again,
    keyboardPlay - keyboard for play
    """
    if message.text == "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏":
        bot.send_message(message.chat.id, "–ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        start(message)
    else:
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        for btn in keyboardPlay:
            keyboard.add(btn, )

        sent_message = bot.send_message(message.chat.id, text_message, reply_markup=keyboard)
        bot.register_next_step_handler(sent_message, get_play_step)


bot.infinity_polling()
